---
title: "Mini Project #01: Fiscal Characteristics of Major US Public Transit Systems"
author: "Jorge Velasco"
editor: visual
options:
  message: false
  warning: false
---

### Hello, this document will walk you through my analysis of the fiscal characteristic of Major US Public Transit Systems.

-   [Tasks by the professor will be in pink.]{style="color: pink;"}
-   [My comments will be in orange.]{style="color: orange;"}
-   [Output messages will be in white.]{style="color: white;"}

<span style="color: orange;"> First I had to download Fares, Expenses, and Monthly Transit Numbers Data. Please note the library packages, as I opted to list them first for aesthetics.

```{r}
suppressPackageStartupMessages({

  library(stringr)
  library(dplyr)
  library(lubridate)
  library(tidyr)
  library(DT)
FARES <- readxl::read_xlsx("2022_fare_revenue.xlsx") |>
  select(-`State/Parent NTD ID`, 
         -`Reporter Type`,
         -`Reporting Module`,
         -`TOS`,
         -`Passenger Paid Fares`,
         -`Organization Paid Fares`) |>
  filter(`Expense Type` == "Funds Earned During Period") |>
  select(-`Expense Type`) |>
  group_by(`NTD ID`,       # Sum over different `TOS` for the same `Mode`
           `Agency Name`,  # These are direct operated and sub-contracted 
           `Mode`) |>      # of the same transit modality
  # Not a big effect in most munis (significant DO
  # tends to get rid of sub-contractors), but we'll sum
  # to unify different passenger experiences
  summarize(`Total Fares` = sum(`Total Fares`)) |>
  ungroup()


EXPENSES <- readr::read_csv("2022_expenses.csv") |>
  select(`NTD ID`, 
         `Agency`,
         `Total`, 
         `Mode`) |>
  mutate(`NTD ID` = as.integer(`NTD ID`)) |>
  rename(Expenses = Total) |>
  group_by(`NTD ID`, `Mode`) |>
  summarize(Expenses = sum(Expenses)) |>
  ungroup()

FINANCIALS <- inner_join(FARES, EXPENSES, join_by(`NTD ID`, `Mode`))

TRIPS <- readxl::read_xlsx("ridership.xlsx", sheet="UPT") |>
  filter(`Mode/Type of Service Status` == "Active") |>
  select(-`Legacy NTD ID`, 
         -`Reporter Type`, 
         -`Mode/Type of Service Status`, 
         -`UACE CD`, 
         -`TOS`) |>
  pivot_longer(-c(`NTD ID`:`3 Mode`), 
               names_to="month", 
               values_to="UPT") |>
  drop_na() |>
  mutate(month=my(month)) # Parse _m_onth _y_ear date specs

MILES <- readxl::read_xlsx("ridership.xlsx", sheet="VRM") |>
  filter(`Mode/Type of Service Status` == "Active") |>
  select(-`Legacy NTD ID`, 
         -`Reporter Type`, 
         -`Mode/Type of Service Status`, 
         -`UACE CD`, 
         -`TOS`) |>
  pivot_longer(-c(`NTD ID`:`3 Mode`), 
               names_to="month", 
               values_to="VRM") |>
  drop_na() |>
  group_by(`NTD ID`, `Agency`, `UZA Name`, 
           `Mode`, `3 Mode`, month) |>
  summarize(VRM = sum(VRM)) |>
  ungroup() |>
  mutate(month=my(month)) # Parse _m_onth _y_ear date specs

USAGE <- inner_join(TRIPS, MILES) |>
  mutate(`NTD ID` = as.integer(`NTD ID`))
})
```

<span style="color: orange;">To make sure I did it right, I elected to view the data in a table format.

```{r}
sample_n(USAGE, 1000) |> 
  mutate(month=as.character(month)) |> 
  DT::datatable()

```

<span style="color: orange;">Now that we have datatable we can begin with the tasks.

# <span style="color: pink;">Task 1: Creating Syntatic Names.

```{r}
USAGE <- USAGE |>
  rename(metro_area='UZA Name')

```

# <span style="color: pink;">Task 2: Recoding the Mode column.

```{r}
##find all distinct values
USAGE |>
  distinct(Mode)

##renaming for our purposes
USAGE <- USAGE |>
  mutate(Mode=case_when(
    Mode == "DR" ~ "Double Decker Buses", 
    Mode == "FB" ~ "Ferryboat",
    Mode == "MB" ~ "Bus",
    Mode == "SR" ~ "Streetcar Rail",
    Mode == "TB" ~ "Trolleybus",
    Mode == "VP" ~ "Vanpool",
    Mode == "CB" ~ "Commuter Bus",
    Mode == "RB" ~ "Bus Rapid Transit",
    Mode == "LR" ~ "Light Rail",
    Mode == "YR" ~ "Hybrid Rail",
    Mode == "MG" ~ "Monorail and Automated Guideway",
    Mode == "CR" ~ "Commuter Rail",
    Mode == "AR" ~ "Alaska Railroad",
    Mode == "TR" ~ "Aerial Tramways",
    Mode == "HR" ~ "Heavy Rail",
    Mode == "IP" ~ "Intercity Bus",
    Mode == "PB" ~ "Publico",
    Mode == "CC" ~ "Cable Car",
    TRUE ~ "Unknown"))

```

<span style="color: orange;">Now that data is clean I created a table for it.

```{r}
sample_n(USAGE, 1000) |> 
  mutate(month=as.character(month)) |> 
  DT::datatable()    
```

# <span style="color: pink;">Task 3: Answering Instructor Specified Questions with dplyr

\n

<span style="color: pink;">Task 3-Q1:What transit agency had the most total VRM in our data set?

```{r}
topVRM_Ag <- USAGE |>
  group_by(Agency) |>
  summarize(sumVRM_Ag = sum(VRM,na.rm=TRUE)) |>
  arrange(desc(sumVRM_Ag)) |> 
  top_n(1,sumVRM_Ag) 

print(topVRM_Ag)

```

<span style="color: orange;">MTA New York City Transit has most total VRM

<span style="color: pink;">Task 3-Q2:What transit mode had the most total VRM in our data set?

```{r}
topVRM_Mo <- USAGE |>
  group_by(Mode) |>
  summarize(sumVRM_Mo = sum(VRM,na.rm=TRUE)) |>
  arrange(desc(sumVRM_Mo)) |> 
  top_n(1,sumVRM_Mo)

print(topVRM_Mo)

```

<span style="color: orange;">bus has most total VRM.

<span style="color: pink;">Task 3-Q3:How many trips were taken on the NYC Subway (Heavy Rail) in May 2024?

```{r}
subwayRides <- USAGE |>
  mutate( yr = year(month)) |>
  mutate(mo = month(month)) |>
  filter(yr==2024 & mo==5) |>
  group_by(Mode) |>
  summarize(UPTsum=sum(UPT,na.rm=TRUE)) |>
  filter(Mode == "Heavy Rail")

print(subwayRides)

```

<span style="color: orange;">237,383,777 rides taken in May 2024.

<span style="color: pink;">Task 3-Q5:How much did NYC subway ridership fall between April 2019 and April 2020?

```{r}
A2019_subwayRides <- USAGE |>
  mutate( yr = year(month)) |>
  mutate(mo = month(month)) |>
  filter(yr==2019 & mo==4) |>
  filter(Mode == "Heavy Rail") |>
  summarize(a2019_UPTsum=sum(UPT,na.rm=TRUE)) |>
  pull(a2019_UPTsum)

A2020_subwayRides <- USAGE |>
  mutate( yr = year(month)) |>
  mutate(mo = month(month)) |>
  filter(yr==2020 & mo==4) |>
  filter(Mode == "Heavy Rail") |>
  summarize(a2020_UPTsum=sum(UPT,na.rm=TRUE)) |>
  pull(a2020_UPTsum)
diff = A2019_subwayRides - A2020_subwayRides
cat(" In April 2019 there were", A2019_subwayRides, "riders.\n", "In April 2019 there were", A2020_subwayRides, "riders.\n","The difference between the years is", diff, "riders.")

```

# <span style="color: pink;">Task 4: Explore and Analyze

### <span style="color: pink;">Find three more interesting transit facts in this data other than those above.

<span style="color: pink;">Fact 1:

```{r}
cableCarsRides <- USAGE |>
  filter(Mode=="Cable Car") |>
  group_by(metro_area) |>
  summarize(ccUPT = sum(UPT,na.rm=TRUE)) |>
  arrange(desc(ccUPT)) |> 
  top_n(1,ccUPT) |>
  pull(ccUPT)

cableCarsCity <- USAGE |>
  filter(Mode=="Cable Car") |>
  group_by(metro_area) |>
  summarize(cccUPT = sum(UPT,na.rm=TRUE)) |>
  arrange(desc(cccUPT)) |> 
  top_n(1,cccUPT) |>
  pull(metro_area)

cat(cableCarsCity, "has the most number of cables cars rides, \n with a total of  ", cableCarsRides, "within this dataset")

```

<span style="color: pink;">Fact 2:

```{r}
NYC <- USAGE |>
  filter(metro_area=="New York--Jersey City--Newark, NY--NJ") |>
  group_by(Agency) |>
  summarize(nycUPT = sum(UPT,na.rm=TRUE)) |>
  arrange(desc(nycUPT)) |> 
  top_n(1,nycUPT) |>
  pull(Agency)
cat("The", NYC, "is the busiest transporation agency in NYC.")   

```

<span style="color: pink;">Fact 3:

```{r}
low <- USAGE |>
  filter(year(month)==2023) |>
  group_by(metro_area) |>
  summarize(lowUPT = sum(UPT,na.rm=TRUE)) |>
  arrange(lowUPT) |> 
  slice_min(lowUPT) |>
  pull(metro_area)

cat(low, "had the lowest amount of public transportation in 2023")     

```

# <span style="color: pink;">Task 5: Table Summarization

```{r}
#Task 5 Table Summarization
USAGE_2022_ANNUAL <- USAGE |> 
  filter(year(month)==2022) |>
  select(-`3 Mode`,-month) |>
  group_by(`NTD ID`, Agency, metro_area,Mode) |>
  summarize(sumUPT=sum(UPT,na.rm=TRUE),sumVRM=sum(VRM,na.rm=TRUE)) |>
  rename(UPT="sumUPT") |>
  rename(VRM="sumVRM")
  
  


##Joining tables and clean up

USAGE_AND_FINANCIALS <- FINANCIALS |>
  left_join(USAGE_2022_ANNUAL, by = "NTD ID") |>
  drop_na() |>
  select(-Mode.x)

glimpse(USAGE_AND_FINANCIALS)  

```

<span style="color: orange;">glimpse is a helpful function to view the new table. This allows you to account for all columns you want to keep.

# <span style="color: pink;">Task 6: Farebox Recovery Among Major Systems

\n

<span style="color: pink;">Task 6-Q1:Which transit system (agency and mode) had the most UPT in 2022?

```{r}
##q1

transit <- USAGE_AND_FINANCIALS |>
  group_by(Agency, Mode.y) |>
  summarize(totalUPT = sum(UPT, na.rm = TRUE)) |>
  ungroup() |>
  filter(totalUPT>400000)|>
  arrange(desc(totalUPT)) |>
  slice(1)
print(transit)

```

<span style="color: orange;">Most UPT in 2022: MTA New York City Transit Heavy Rail.

<span style="color: pink;">Task 6-Q2:Which transit system (agency and mode) had the highest farebox recovery, defined as the highest ratio of Total Fares to Expenses?

```{r}
farebox_recovery <- USAGE_AND_FINANCIALS |>
  group_by(Agency, Mode.y) |>
  summarize(
    totalFares = sum(`Total Fares`, na.rm = TRUE),
    totalExpenses = sum(Expenses, na.rm = TRUE)) |>
  ungroup() |>
  mutate(fareboxRatio = ifelse(totalExpenses > 0, totalFares / totalExpenses, NA)) |>  
  arrange(desc(fareboxRatio)) |>  
  slice(1)  

print(farebox_recovery)

```

<span style="color: orange;">Highest Fairbox Ratio: Hyannis Harbor Tours, Inc. Ferryboat

<span style="color: pink;">Task 6-Q3:Which transit system (agency and mode) has the lowest expenses per UPT?

```{r}
exp2UPT <- USAGE_AND_FINANCIALS |>
  group_by(Agency, Mode.y) |>
  summarize(
    totalUPT = sum(UPT, na.rm = TRUE),
    totalExpenses = sum(Expenses, na.rm = TRUE)) |>
  ungroup() |>
  filter(totalUPT>400000)|>
  mutate(exp2UPT_ratio = ifelse(totalExpenses > 0 & totalUPT>0,  totalExpenses /totalUPT, NA)) |> #taking out any UPT that is 0. 
  arrange(exp2UPT_ratio) |>  
  slice(2)  

print(exp2UPT)

```

<span style="color: orange;">lowest expenses per UPT: Anaheim Transportation Network Bus

<span style="color: pink;">Task 6-Q4:Which transit system (agency and mode) has the highest total fares per UPT?

```{r}
fare2UPT <- USAGE_AND_FINANCIALS |>
  group_by(Agency, Mode.y) |>
  summarize(
    totalUPT = sum(UPT, na.rm = TRUE),
    totalFares = sum(`Total Fares`, na.rm = TRUE) ) |>
  ungroup() |>
  filter(totalUPT>400000)|>
  mutate(fare2UPT_ratio = ifelse(totalFares > 0 & totalUPT>0, totalFares /totalUPT, NA)) |> #taking out any UPT that is 0. 
  arrange(fare2UPT_ratio) |>  
  slice(1)  

print(fare2UPT)

```

<span style="color: orange;">highest total fares per UPT: Athens-Clarke County Unified Govern… Bus

<span style="color: pink;">Task 6-Q5:Which transit system (agency and mode) has the lowest expenses per VRM?

```{r}
exp2VRM <- USAGE_AND_FINANCIALS |>
  group_by(Agency, Mode.y) |>
  summarize(
    totalVRM = sum(VRM, na.rm = TRUE),
    totalExpenses = sum(Expenses, na.rm = TRUE)) |>
  ungroup() |>
  mutate(exp2VRM_ratio = ifelse(totalExpenses > 0 & totalVRM>0, totalExpenses /totalVRM, NA)) |> #taking out any UPT that is 0. 
  arrange(exp2VRM_ratio) |>  
  slice(1)  

print(exp2VRM)

```

<span style="color: orange;"> lowest expenses per VRM: The Transportation Management Ass… Vanpo…

<span style="color: pink;">Task 6-Q6:Which transit system (agency and mode) has the highest total fares per VRM?

```{r}
fare2VRM <- USAGE_AND_FINANCIALS |>
  group_by(Agency, Mode.y) |>
  summarize(
    totalVRM = sum(VRM, na.rm = TRUE),
    totalFares = sum(`Total Fares`, na.rm = TRUE)) |>
  ungroup() |>
  mutate(fare2VRM_ratio = ifelse(totalFares > 0 & totalVRM>0, totalFares /totalVRM, NA)) |> #taking out any UPT that is 0. 
  arrange(desc(fare2VRM_ratio)) |>  
  slice(1)  

print(fare2VRM)

```

<span style="color: pink;">Based on all of this, what do you believe to be the most efficient transit system in the country? (Your answer may differ depending on which form of ‘efficiency’ you care most about)

```{r}
efficiency <- transit |>
  pull(Agency)
  
cat("In my opinion, the ",efficiency, "is the most efficient because it has the \n highest number of UPT. We do not know the complexity of volume in planning. There are \n more schedules to consider in a larger city, so the fact it has the most UPT \n means it the most efficient.")

```
